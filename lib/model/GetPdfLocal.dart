import 'dart:io';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

class PdfScanner with ChangeNotifier {
  List<String> _pdfPaths = [];
  bool _isLoading = false;

  List<String> get pdfPaths => _pdfPaths;
  bool get isLoading => _isLoading;

  /// ЁЯУМ **1я╕ПтГг SharedPreferences рд╕реЗ рд╕реЗрд╡ рдХрд┐рдП рдЧрдП PDF рдкрд╛рде рд▓реЛрдб рдХрд░реЗрдВ**
  Future<void> loadPdfPaths() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    _pdfPaths = prefs.getStringList('pdf_paths') ?? [];
    notifyListeners();  // ЁЯФД UI рдЕрдкрдбреЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП
  }

  /// ЁЯУМ **2я╕ПтГг PDF рдлрд╛рдЗрд▓реНрд╕ рд╕реНрдХреИрди рдХрд░реЗрдВ рдФрд░ SharedPreferences рдореЗрдВ рд╕реЗрд╡ рдХрд░реЗрдВ**
  Future<void> scanAndSavePdfFiles(String directoryPath) async {
    _isLoading = true;
    notifyListeners();

    List<File> pdfFiles = await scanForPDFFiles(directoryPath);
    _pdfPaths = pdfFiles.map((file) => file.path).toList();

    SharedPreferences prefs = await SharedPreferences.getInstance();
    await prefs.setStringList('pdf_paths', _pdfPaths);

    _isLoading = false;
    notifyListeners();  // ЁЯФД UI рдЕрдкрдбреЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП
  }

  /// ЁЯУМ **3я╕ПтГг рд╕реНрдкреЗрд╕рд┐рдлрд┐рдХ рдбрд╛рдпрд░реЗрдХреНрдЯреНрд░реА рдореЗрдВ PDF рд╕рд░реНрдЪ рдХрд░реЗрдВ**
  Future<List<File>> scanForPDFFiles(String directoryPath) async {
    List<File> pdfFiles = [];
    Directory directory = Directory(directoryPath);

    Future<void> scanDirectory(Directory dir) async {
      try {
        await for (var entity in dir.list(recursive: false, followLinks: false)) {
          if (entity is File && entity.path.endsWith('.pdf')) {
            pdfFiles.add(entity);
          } else if (entity is Directory) {
            await scanDirectory(entity);
          }
        }
      } catch (e) {
        print('Error while scanning directory: $e');
      }
    }

    await scanDirectory(directory);
    return pdfFiles;
  }

  /// ЁЯУМ **4я╕ПтГг рд░реАрдлреНрд░реЗрд╢ рдХрд░рдиреЗ рдкрд░ рдирдпрд╛ рдбреЗрдЯрд╛ рд╕реНрдХреИрди рдФрд░ рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ**
  Future<void> refreshPdfFiles(String directoryPath) async {
    await scanAndSavePdfFiles(directoryPath);
  }
}
